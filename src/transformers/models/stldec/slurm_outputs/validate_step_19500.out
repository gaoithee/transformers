Loading python/3.11.6--gcc--8.5.0
  Loading requirement: bzip2/1.0.8-gp5wcz5 libmd/1.0.4-wja3f5q
    libbsd/0.11.7-cgxjopl expat/2.5.0-bptl3xw ncurses/6.4-asx3jea
    readline/8.2-nyw6mp6 gdbm/1.23-fs6otck libiconv/1.17-d7yvx2s
    xz/5.4.1-hubmwr5 zlib-ng/2.1.4-6htiapk libxml2/2.10.3-5eeeokp
    pigz/2.7-bopr5vp zstd/1.5.5-gawytfl tar/1.34-amqus5s gettext/0.22.3-2g7elif
    libffi/3.4.4-6r7brdq libxcrypt/4.4.35-ss2rzin sqlite/3.43.2
    util-linux-uuid/2.38.1-jkdi7kv
Running on  nodes
---------------------------------------------
SLURM job ID:        12304253
SLURM job node list: lrdn3300
DATE:                Mon Feb 10 11:49:52 CET 2025
---------------------------------------------
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
/leonardo/home/userexternal/scanduss/transformers/src/transformers/models/stldec/validate.py:36: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  optimizer = torch.load(optimizer_path)
/leonardo/home/userexternal/scanduss/transformers/src/transformers/models/stldec/validate.py:37: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  scheduler = torch.load(scheduler_path)
/leonardo/home/userexternal/scanduss/transformers/src/transformers/models/stldec/validate.py:54: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  encoder_hidden_states = torch.tensor(encoder_hidden_states, device=device).unsqueeze(0).unsqueeze(0)
Mean euclidean distance: 1.4719887971878052
Traceback (most recent call last):
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/io/formats/csvs.py", line 270, in save
    self._save()
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/io/formats/csvs.py", line 275, in _save
    self._save_body()
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/io/formats/csvs.py", line 313, in _save_body
    self._save_chunk(start_i, end_i)
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/io/formats/csvs.py", line 324, in _save_chunk
    libwriters.write_csv_rows(
  File "writers.pyx", line 56, in pandas._libs.writers.write_csv_rows
OSError: [Errno 122] Disk quota exceeded

During handling of the above exception, another exception occurred:

OSError: [Errno 122] Disk quota exceeded

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/leonardo/home/userexternal/scanduss/transformers/src/transformers/models/stldec/validate.py", line 92, in <module>
    eval_df.to_csv('step_19500_formulae.csv')
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/util/_decorators.py", line 333, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/core/generic.py", line 3967, in to_csv
    return DataFrameRenderer(formatter).to_csv(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/io/formats/format.py", line 1014, in to_csv
    csv_formatter.save()
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/io/formats/csvs.py", line 251, in save
    with get_handle(
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/io/common.py", line 157, in __exit__
    self.close()
  File "/leonardo/home/userexternal/scanduss/.venv/lib/python3.11/site-packages/pandas/io/common.py", line 144, in close
    handle.close()
OSError: [Errno 122] Disk quota exceeded
srun: error: lrdn3300: task 0: Exited with exit code 1
DONE!
